{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/github/ContractorApp/src/Pages/ContractingCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Components/Card/card\";\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContractorCalculator = () => {\n  _s();\n\n  const [calculation, setCalculation] = useState([]);\n  const [firstDim, setFirstDim] = useState(\"\");\n  const [secondDim, setSecondDim] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setCalculation(data));\n  }, []);\n\n  const handleFormChange = (firstInputValue, secondInputValue) => {\n    setFirstDim(firstInputValue);\n    setSecondDim(secondInputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch(\"/api/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        // The firstDimension used to be 'content' - as it is in the database currently\n        firstDimension: firstDim,\n        secondDimension: secondDim\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => {\n      setFirstDim(\"\");\n      setSecondDim(\"\"); // getLatestTodos();\n    });\n  };\n  /*   const getLatestTodos = () => {\n    fetch(\"/api\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => setCalculation(data));\n  }; */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contracting Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      userInput: firstDim,\n      secondDimension: secondDim,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listOfTodos: calculation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContractorCalculator, \"zZDZDZvL4J2aezVKRVmwgul98M4=\");\n\n_c = ContractorCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractorCalculator\");","map":{"version":3,"sources":["/Users/garrett/github/ContractorApp/src/Pages/ContractingCalculator.js"],"names":["React","useState","useEffect","Card","Form","ContractorCalculator","calculation","setCalculation","firstDim","setFirstDim","secondDim","setSecondDim","fetch","then","response","ok","json","data","handleFormChange","firstInputValue","secondInputValue","handleFormSubmit","method","body","JSON","stringify","firstDimension","secondDimension","headers","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,KALH,EAMGH,IANH,CAMSI,IAAD,IAAUV,cAAc,CAACU,IAAD,CANhC;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,gBAAgB,GAAG,CAACC,eAAD,EAAkBC,gBAAlB,KAAuC;AAC9DX,IAAAA,WAAW,CAACU,eAAD,CAAX;AACAR,IAAAA,YAAY,CAACS,gBAAD,CAAZ;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BT,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBU,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB;AACAC,QAAAA,cAAc,EAAElB,QAFG;AAGnBmB,QAAAA,eAAe,EAAEjB;AAHE,OAAf,CAFa;AAOnBkB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAPU,KAAhB,CAAL,CAWGf,IAXH,CAWSC,QAAD,IAAcA,QAAQ,CAACE,IAAT,EAXtB,EAYGH,IAZH,CAYSgB,OAAD,IAAa;AACjBpB,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ,CAFiB,CAGjB;AACD,KAhBH;AAiBD,GAlBD;AAoBA;AACF;AACA;AACA;AACA;AACA;AACA;;;AAEE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEH,QADb;AAEE,MAAA,eAAe,EAAEE,SAFnB;AAGE,MAAA,YAAY,EAAEQ,gBAHhB;AAIE,MAAA,YAAY,EAAEG;AAJhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CA3DM;;GAAMD,oB;;KAAAA,oB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Components/Card/card\";\nimport { Form } from \"../Components/Form/form\";\n\nexport const ContractorCalculator = () => {\n  const [calculation, setCalculation] = useState([]);\n  const [firstDim, setFirstDim] = useState(\"\");\n  const [secondDim, setSecondDim] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then((data) => setCalculation(data));\n  }, []);\n\n  const handleFormChange = (firstInputValue, secondInputValue) => {\n    setFirstDim(firstInputValue);\n    setSecondDim(secondInputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch(\"/api/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        // The firstDimension used to be 'content' - as it is in the database currently\n        firstDimension: firstDim,\n        secondDimension: secondDim,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((message) => {\n        setFirstDim(\"\");\n        setSecondDim(\"\");\n        // getLatestTodos();\n      });\n  };\n\n  /*   const getLatestTodos = () => {\n    fetch(\"/api\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => setCalculation(data));\n  }; */\n\n  return (\n    <>\n      <h1>Contracting Calculator</h1>\n      <Form\n        userInput={firstDim}\n        secondDimension={secondDim}\n        onFormChange={handleFormChange}\n        onFormSubmit={handleFormSubmit}\n      />\n      <Card listOfTodos={calculation} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}