{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/github/my-app/src/Pages/TodoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Components/Card/card\";\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [addTodo, setAddTodo] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setTodo(data));\n  }, []);\n\n  const handleFormChange = inputValue => {\n    setAddTodo(inputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch(\"/api/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        content: addTodo\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => {\n      setAddTodo(\"\");\n      getLatestTodos();\n    });\n  };\n\n  const getLatestTodos = () => {\n    fetch(\"/api\").then(response => {\n      return response.json();\n    }).then(data => setTodo(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addTodo,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listOfTodos: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoPage, \"H9ya0eprP7w9gScBXR82oRVii90=\");\n\n_c = TodoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"sources":["/Users/garrett/github/my-app/src/Pages/TodoPage.js"],"names":["React","useState","useEffect","Card","Form","TodoPage","todo","setTodo","addTodo","setAddTodo","fetch","then","response","ok","json","data","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","content","headers","message","getLatestTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,IAAT,QAAqB,yBAArB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;AACF,KALH,EAMGH,IANH,CAMSI,IAAD,IAAUR,OAAO,CAACQ,IAAD,CANzB;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACvCR,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBS,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,OAAO,EAAEf;AADU,OAAf,CAFa;AAKnBgB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AALU,KAAhB,CAAL,CASGb,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACE,IAAT,EATtB,EAUGH,IAVH,CAUSc,OAAD,IAAa;AACjBhB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAiB,MAAAA,cAAc;AACf,KAbH;AAcD,GAfD;;AAiBA,QAAMA,cAAc,GAAG,MAAM;AAC3BhB,IAAAA,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,KAHH,EAIGH,IAJH,CAISI,IAAD,IAAUR,OAAO,CAACQ,IAAD,CAJzB;AAKD,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,SAAS,EAAEP,OADb;AAEE,MAAA,YAAY,EAAEQ,gBAFhB;AAGE,MAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CApDM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card } from \"../Components/Card/card\";\nimport { Form } from \"../Components/Form/form\";\n\nexport const TodoPage = () => {\n  const [todo, setTodo] = useState([]);\n  const [addTodo, setAddTodo] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then((data) => setTodo(data));\n  }, []);\n\n  const handleFormChange = (inputValue) => {\n    setAddTodo(inputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch(\"/api/create\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        content: addTodo,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((response) => response.json())\n      .then((message) => {\n        setAddTodo(\"\");\n        getLatestTodos();\n      });\n  };\n\n  const getLatestTodos = () => {\n    fetch(\"/api\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => setTodo(data));\n  };\n\n  return (\n    <>\n      <Form\n        userInput={addTodo}\n        onFormChange={handleFormChange}\n        onFormSubmit={handleFormSubmit}\n      />\n      <Card listOfTodos={todo} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}