{"ast":null,"code":"var _jsxFileName = \"/Users/garrett/github/my-app/src/Components/Update/update.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // The userInput (aka: 'content') and the id are passed in from the web page... these are used in updateTodo to call the server\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Update = ({\n  userInput,\n  id\n}) => {\n  _s();\n\n  const navigate = useNavigate(); // This function speaks directly to the Flask Route for updating... May need to change it to /api/update/${id} to distinguish properly\n\n  const updateTodo = () => {\n    fetch(`/api/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        // Passing in the id value and the content for the POST operation\n        id: id,\n        content: userInput\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: userInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Update, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/garrett/github/my-app/src/Components/Update/update.js"],"names":["React","useState","useNavigate","Update","userInput","id","navigate","updateTodo","fetch","method","body","JSON","stringify","content","then","response","json","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;;AACA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAuB;AAAA;;AAC3C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAD2C,CAG3C;;AACA,QAAMK,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAE,QAAOH,EAAG,EAAZ,EAAe;AAClBI,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB;AACAP,QAAAA,EAAE,EAAEA,EAFe;AAGnBQ,QAAAA,OAAO,EAAET;AAHU,OAAf;AAFY,KAAf,CAAL,CAQGU,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAZH;AAaD,GAdD;;AAeA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,UAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,KAAK,EAAEH;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CA3BM;;GAAMD,M;UACMD,W;;;KADNC,M","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// The userInput (aka: 'content') and the id are passed in from the web page... these are used in updateTodo to call the server\nexport const Update = ({ userInput, id }) => {\n  const navigate = useNavigate();\n\n  // This function speaks directly to the Flask Route for updating... May need to change it to /api/update/${id} to distinguish properly\n  const updateTodo = () => {\n    fetch(`/api/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        // Passing in the id value and the content for the POST operation\n        id: id,\n        content: userInput,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        navigate(\"/\");\n      });\n  };\n  return (\n    <>\n      <form onSubmit={updateTodo}>\n        <input type=\"text\" required value={userInput}></input>\n        <input type=\"submit\" value=\"Update\"></input>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}